[{"/Users/sunglee/FullStack/maekju/src/index.js":"1","/Users/sunglee/FullStack/maekju/src/App.js":"2","/Users/sunglee/FullStack/maekju/src/components/Products/Products.jsx":"3","/Users/sunglee/FullStack/maekju/src/components/Products/Product/Product.jsx":"4","/Users/sunglee/FullStack/maekju/src/components/Products/Product/styles.js":"5","/Users/sunglee/FullStack/maekju/src/components/Navbar/Navbar.jsx":"6","/Users/sunglee/FullStack/maekju/src/components/Navbar/styles.js":"7","/Users/sunglee/FullStack/maekju/src/components/index.js":"8","/Users/sunglee/FullStack/maekju/src/components/Products/styles.js":"9","/Users/sunglee/FullStack/maekju/src/lib/commerce.js":"10","/Users/sunglee/FullStack/maekju/src/components/Cart/Cart.jsx":"11","/Users/sunglee/FullStack/maekju/src/components/Cart/styles.js":"12","/Users/sunglee/FullStack/maekju/src/components/Cart/CartItem/CartItem.jsx":"13","/Users/sunglee/FullStack/maekju/src/components/Cart/CartItem/styles.js":"14","/Users/sunglee/FullStack/maekju/src/components/CheckoutForm/Checkout/Checkout.jsx":"15","/Users/sunglee/FullStack/maekju/src/components/CheckoutForm/Checkout/styles.js":"16","/Users/sunglee/FullStack/maekju/src/components/CheckoutForm/AddressForm.jsx":"17","/Users/sunglee/FullStack/maekju/src/components/CheckoutForm/PaymentForm.jsx":"18","/Users/sunglee/FullStack/maekju/src/components/CheckoutForm/FormInput.jsx":"19","/Users/sunglee/FullStack/maekju/src/components/CheckoutForm/Review.jsx":"20"},{"size":146,"mtime":1611860494234,"results":"21","hashOfConfig":"22"},{"size":2552,"mtime":1612147663923,"results":"23","hashOfConfig":"22"},{"size":634,"mtime":1611962640784,"results":"24","hashOfConfig":"22"},{"size":1257,"mtime":1611962860167,"results":"25","hashOfConfig":"22"},{"size":452,"mtime":1612019471481,"results":"26","hashOfConfig":"22"},{"size":1713,"mtime":1612071162891,"results":"27","hashOfConfig":"22"},{"size":1510,"mtime":1611865992159,"results":"28","hashOfConfig":"22"},{"size":231,"mtime":1612072790009,"results":"29","hashOfConfig":"22"},{"size":273,"mtime":1611948319795,"results":"30","hashOfConfig":"22"},{"size":132,"mtime":1611895796306,"results":"31","hashOfConfig":"22"},{"size":2084,"mtime":1612072186658,"results":"32","hashOfConfig":"22"},{"size":570,"mtime":1611970591227,"results":"33","hashOfConfig":"22"},{"size":1430,"mtime":1612072039591,"results":"34","hashOfConfig":"22"},{"size":333,"mtime":1612069847462,"results":"35","hashOfConfig":"22"},{"size":2293,"mtime":1612147811594,"results":"36","hashOfConfig":"22"},{"size":1158,"mtime":1612072544098,"results":"37","hashOfConfig":"22"},{"size":5221,"mtime":1612146625247,"results":"38","hashOfConfig":"22"},{"size":2710,"mtime":1612148301906,"results":"39","hashOfConfig":"22"},{"size":467,"mtime":1612143893300,"results":"40","hashOfConfig":"22"},{"size":1026,"mtime":1612145751841,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1dhxl31",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/sunglee/FullStack/maekju/src/index.js",[],["84","85"],"/Users/sunglee/FullStack/maekju/src/App.js",[],"/Users/sunglee/FullStack/maekju/src/components/Products/Products.jsx",[],"/Users/sunglee/FullStack/maekju/src/components/Products/Product/Product.jsx",[],"/Users/sunglee/FullStack/maekju/src/components/Products/Product/styles.js",[],"/Users/sunglee/FullStack/maekju/src/components/Navbar/Navbar.jsx",[],"/Users/sunglee/FullStack/maekju/src/components/Navbar/styles.js",[],"/Users/sunglee/FullStack/maekju/src/components/index.js",[],"/Users/sunglee/FullStack/maekju/src/components/Products/styles.js",[],"/Users/sunglee/FullStack/maekju/src/lib/commerce.js",[],"/Users/sunglee/FullStack/maekju/src/components/Cart/Cart.jsx",[],"/Users/sunglee/FullStack/maekju/src/components/Cart/styles.js",[],"/Users/sunglee/FullStack/maekju/src/components/Cart/CartItem/CartItem.jsx",[],"/Users/sunglee/FullStack/maekju/src/components/Cart/CartItem/styles.js",[],"/Users/sunglee/FullStack/maekju/src/components/CheckoutForm/Checkout/Checkout.jsx",["86","87","88"],"/Users/sunglee/FullStack/maekju/src/components/CheckoutForm/Checkout/styles.js",[],"/Users/sunglee/FullStack/maekju/src/components/CheckoutForm/AddressForm.jsx",["89","90"],"import React, { useState, useEffect } from \"react\";\nimport {\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Grid,\n  Typography,\n} from \"@material-ui/core\";\nimport { useForm, FormProvider } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport { commerce } from \"../../lib/commerce\";\n\nimport FormInput from \"./FormInput\";\n\nconst AddressForm = ({ checkoutToken, next }) => {\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState(\"\");\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState(\"\");\n  const methods = useForm();\n\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\n    id: code,\n    label: name,\n  }));\n  const subdivisions = Object.entries(shippingSubdivisions).map(\n    ([code, name]) => ({\n      id: code,\n      label: name,\n    })\n  );\n  const options = shippingOptions.map((option) => ({\n    id: option.id,\n    label: `${option.description} - (${option.price.formatted_with_symbol})`,\n  }));\n\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const { countries } = await commerce.services.localeListShippingCountries(\n      checkoutTokenId\n    );\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async (countryCode) => {\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\n      countryCode\n    );\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (\n    checkoutTokenId,\n    country,\n    region = null\n  ) => {\n    const options = await commerce.checkout.getShippingOptions(\n      checkoutTokenId,\n      { country, region }\n    );\n    setShippingOptions(options);\n    console.log(options[0].id);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n\n  useEffect(() => {\n    if (shippingSubdivision)\n      fetchShippingOptions(\n        checkoutToken.id,\n        shippingCountry,\n        shippingSubdivision\n      );\n  }, [shippingSubdivision]);\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>\n        Shipping Address\n      </Typography>\n      <FormProvider {...methods}>\n        <form\n          onSubmit={methods.handleSubmit((data) =>\n            next({\n              ...data,\n              shippingCountry,\n              shippingSubdivision,\n              shippingOption,\n            })\n          )}\n        >\n          <Grid container spacing={3}>\n            <FormInput name=\"firstName\" label=\"First name\" />\n            <FormInput name=\"lastName\" label=\"Last name\" />\n            <FormInput name=\"address1\" label=\"Address\" />\n            <FormInput name=\"email\" label=\"Email\" />\n            <FormInput name=\"city\" label=\"City\" />\n            <FormInput name=\"zip\" label=\"ZIP / Postal Code\" />\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Country</InputLabel>\n              <Select\n                value={shippingCountry}\n                fullWidth\n                onChange={(e) => setShippingCountry(e.target.value)}\n              >\n                {countries.map((country) => (\n                  <MenuItem key={country.id} value={country.id}>\n                    {country.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Subdivision</InputLabel>\n              <Select\n                value={shippingSubdivision}\n                fullWidth\n                onChange={(e) => setShippingSubdivision(e.target.value)}\n              >\n                {subdivisions.map((subdivision) => (\n                  <MenuItem key={subdivision.id} value={subdivision.id}>\n                    {subdivision.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Options</InputLabel>\n              <Select\n                value={shippingOption}\n                fullWidth\n                onChange={(e) => setShippingOption(e.target.value)}\n              >\n                {options.map((option) => (\n                  <MenuItem key={option.id} value={option.id}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n          </Grid>\n          <br />\n          <div style={{ display: \"flex \", justifyContent: \"space-between\" }}>\n            <Button component={Link} to=\"/cart\" variant=\"outlined\">\n              Back to cart\n            </Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n              Next\n            </Button>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\n\nexport default AddressForm;\n","/Users/sunglee/FullStack/maekju/src/components/CheckoutForm/PaymentForm.jsx",[],"/Users/sunglee/FullStack/maekju/src/components/CheckoutForm/FormInput.jsx",[],"/Users/sunglee/FullStack/maekju/src/components/CheckoutForm/Review.jsx",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":12,"column":3,"nodeType":"97","messageId":"98","endLine":12,"endColumn":19},{"ruleId":"95","severity":1,"message":"99","line":13,"column":3,"nodeType":"97","messageId":"98","endLine":13,"endColumn":10},{"ruleId":"95","severity":1,"message":"100","line":14,"column":3,"nodeType":"97","messageId":"98","endLine":14,"endColumn":9},{"ruleId":"101","severity":1,"message":"102","line":72,"column":6,"nodeType":"103","endLine":72,"endColumn":8,"suggestions":"104"},{"ruleId":"101","severity":1,"message":"105","line":85,"column":6,"nodeType":"103","endLine":85,"endColumn":27,"suggestions":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'CircularProgress' is defined but never used.","Identifier","unusedVar","'Divider' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["109"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["110"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"115","text":"116"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"117","text":"118"},[2152,2154],"[checkoutToken.id]",[2435,2456],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]